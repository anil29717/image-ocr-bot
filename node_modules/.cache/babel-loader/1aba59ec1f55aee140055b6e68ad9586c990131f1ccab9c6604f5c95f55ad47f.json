{"ast":null,"code":"import React,{useState,useRef}from'react';import Tesseract from'tesseract.js';import'./Home.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BotAvatar=()=>{const[selectedImage,setSelectedImage]=useState(null);const[extractedText,setExtractedText]=useState('');const[loading,setLoading]=useState(false);const[isSpeaking,setIsSpeaking]=useState(false);const speechRef=useRef(null);// Function to preprocess the image\nconst preprocessImage=file=>{return new Promise(resolve=>{const img=new Image();img.src=URL.createObjectURL(file);img.onload=()=>{const canvas=document.createElement('canvas');const ctx=canvas.getContext('2d');canvas.width=img.width;canvas.height=img.height;ctx.drawImage(img,0,0);// Convert to grayscale\nconst imageData=ctx.getImageData(0,0,canvas.width,canvas.height);for(let i=0;i<imageData.data.length;i+=4){const avg=(imageData.data[i]+imageData.data[i+1]+imageData.data[i+2])/3;imageData.data[i]=avg;// Red\nimageData.data[i+1]=avg;// Green\nimageData.data[i+2]=avg;// Blue\n}ctx.putImageData(imageData,0,0);canvas.toBlob(resolve);// Get the blob of the processed image\n};});};const handleBotClick=()=>{document.getElementById('fileInput').click();};const handleImageUpload=async e=>{const file=e.target.files[0];if(file){// Preprocess the image before extracting text\nconst processedBlob=await preprocessImage(file);setSelectedImage(URL.createObjectURL(processedBlob));setLoading(true);// Use Tesseract.js to recognize text from the processed image\nTesseract.recognize(processedBlob,'eng',{logger:m=>console.log(m)}).then(_ref=>{let{data:{text}}=_ref;setExtractedText(text);setLoading(false);}).catch(error=>{console.error('Error recognizing text:',error);setLoading(false);});}};const handleReadAloud=language=>{if('speechSynthesis'in window){if(speechRef.current){window.speechSynthesis.cancel();}const speech=new SpeechSynthesisUtterance(extractedText);speech.lang=language;setIsSpeaking(true);speech.onend=()=>{setIsSpeaking(false);speechRef.current=null;};speechRef.current=speech;window.speechSynthesis.speak(speech);}else{alert('Sorry, your browser does not support text-to-speech.');}};const handlePause=()=>{if(window.speechSynthesis.speaking){window.speechSynthesis.pause();setIsSpeaking(false);}};const handleResume=()=>{if(window.speechSynthesis.paused){window.speechSynthesis.resume();setIsSpeaking(true);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"web-site h-screens\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-14\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"p-4 ml-20 font-bold text-2xl text-white \",children:\"Bot Speak\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center gap-28 items-center h-screen border-t-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\" w-4/12\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-white font-bold text-5xl\",children:\" Upload Image to \"}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-white font-bold text-5xl\",children:\" Extract Text \"}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-white font-bold text-5xl\",children:\" Free \"}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-white font-bold text-5xl\",children:\" Tested Version \"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center w-4/12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center\",children:/*#__PURE__*/_jsx(\"img\",{alt:\"\",className:\"bot-logo cursor-pointer w-40 h-40 rounded-full border-4 border-blue-950\",onClick:handleBotClick})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-blue-950 bg-white rounded-3xl p-2 mt-10\",children:\"Click on me to Upload Image\"}),/*#__PURE__*/_jsx(\"input\",{id:\"fileInput\",type:\"file\",accept:\"image/*\",onChange:handleImageUpload,className:\"hidden\"}),selectedImage&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 flex justify-center items-center gap-10\",children:[/*#__PURE__*/_jsx(\"img\",{src:selectedImage,alt:\"Uploaded\",className:\"w-60 h-auto border-2 border-gray-300\"}),loading?/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 text-white text-lg font-semibold\",children:\"Processing image...\"}):/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 text-white text-lg font-semibold\",children:\"Text extracted successfully!\"})]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center\",children:extractedText&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-0 mb-10 p-4 w-10/12 bg-white shadow rounded\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold\",children:\"Extracted Text:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-700 mt-2\",children:extractedText}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleReadAloud('en-US'),className:\"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 focus:outline-none\",children:\"Read Aloud (English)\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleReadAloud('hi-IN'),className:\"mt-4 ml-2 px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 focus:outline-none\",children:\"Read Aloud (Hindi)\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePause,className:\"mt-4 ml-2 px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 focus:outline-none\",disabled:!isSpeaking,children:\"Pause\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleResume,className:\"mt-4 ml-2 px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-600 focus:outline-none\",disabled:!window.speechSynthesis.paused,children:\"Resume\"})]})})]});};export default BotAvatar;","map":{"version":3,"names":["React","useState","useRef","Tesseract","jsx","_jsx","jsxs","_jsxs","BotAvatar","selectedImage","setSelectedImage","extractedText","setExtractedText","loading","setLoading","isSpeaking","setIsSpeaking","speechRef","preprocessImage","file","Promise","resolve","img","Image","src","URL","createObjectURL","onload","canvas","document","createElement","ctx","getContext","width","height","drawImage","imageData","getImageData","i","data","length","avg","putImageData","toBlob","handleBotClick","getElementById","click","handleImageUpload","e","target","files","processedBlob","recognize","logger","m","console","log","then","_ref","text","catch","error","handleReadAloud","language","window","current","speechSynthesis","cancel","speech","SpeechSynthesisUtterance","lang","onend","speak","alert","handlePause","speaking","pause","handleResume","paused","resume","className","children","alt","onClick","id","type","accept","onChange","disabled"],"sources":["C:/Users/Anil Kumar/Desktop/Peronal Project/bot-image-ocr/src/components/Home.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Tesseract from 'tesseract.js';\r\nimport './Home.css'\r\n\r\nconst BotAvatar = () => {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [extractedText, setExtractedText] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const speechRef = useRef(null);\r\n\r\n  // Function to preprocess the image\r\n  const preprocessImage = (file) => {\r\n    return new Promise((resolve) => {\r\n      const img = new Image();\r\n      img.src = URL.createObjectURL(file);\r\n      img.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        // Convert to grayscale\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        for (let i = 0; i < imageData.data.length; i += 4) {\r\n          const avg = (imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2]) / 3;\r\n          imageData.data[i] = avg; // Red\r\n          imageData.data[i + 1] = avg; // Green\r\n          imageData.data[i + 2] = avg; // Blue\r\n        }\r\n        ctx.putImageData(imageData, 0, 0);\r\n        canvas.toBlob(resolve); // Get the blob of the processed image\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleBotClick = () => {\r\n    document.getElementById('fileInput').click();\r\n  };\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      // Preprocess the image before extracting text\r\n      const processedBlob = await preprocessImage(file);\r\n      setSelectedImage(URL.createObjectURL(processedBlob));\r\n      setLoading(true);\r\n\r\n      // Use Tesseract.js to recognize text from the processed image\r\n      Tesseract.recognize(processedBlob, 'eng', {\r\n        logger: (m) => console.log(m),\r\n      })\r\n        .then(({ data: { text } }) => {\r\n          setExtractedText(text);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error recognizing text:', error);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleReadAloud = (language) => {\r\n    if ('speechSynthesis' in window) {\r\n      if (speechRef.current) {\r\n        window.speechSynthesis.cancel();\r\n      }\r\n\r\n      const speech = new SpeechSynthesisUtterance(extractedText);\r\n      speech.lang = language;\r\n      setIsSpeaking(true);\r\n\r\n      speech.onend = () => {\r\n        setIsSpeaking(false);\r\n        speechRef.current = null;\r\n      };\r\n\r\n      speechRef.current = speech;\r\n      window.speechSynthesis.speak(speech);\r\n    } else {\r\n      alert('Sorry, your browser does not support text-to-speech.');\r\n    }\r\n  };\r\n\r\n  const handlePause = () => {\r\n    if (window.speechSynthesis.speaking) {\r\n      window.speechSynthesis.pause();\r\n      setIsSpeaking(false);\r\n    }\r\n  };\r\n\r\n  const handleResume = () => {\r\n    if (window.speechSynthesis.paused) {\r\n      window.speechSynthesis.resume();\r\n      setIsSpeaking(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='web-site h-screens'>\r\n      <div>\r\n        <div className='h-14'>\r\n          <h1 className='p-4 ml-20 font-bold text-2xl text-white '>Bot Speak</h1>\r\n        </div>\r\n        <div className=\"flex justify-center gap-28 items-center h-screen border-t-2\">\r\n          <div className=' w-4/12'>\r\n            <h1 className='text-white font-bold text-5xl'> Upload Image to </h1>\r\n            <h1 className='text-white font-bold text-5xl'> Extract Text </h1>\r\n            <h1 className='text-white font-bold text-5xl'> Free </h1>\r\n            <h1 className='text-white font-bold text-5xl'> Tested Version </h1>\r\n          </div>\r\n          <div className=\"text-center w-4/12\">\r\n            <div className='flex justify-center'>\r\n              <img\r\n                alt=\"\"\r\n                className=\"bot-logo cursor-pointer w-40 h-40 rounded-full border-4 border-blue-950\"\r\n                onClick={handleBotClick}\r\n              />\r\n            </div>\r\n            <p className=\"text-lg text-blue-950 bg-white rounded-3xl p-2 mt-10\">Click on me to Upload Image</p>\r\n\r\n            {/* Hidden file input */}\r\n            <input\r\n              id=\"fileInput\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={handleImageUpload}\r\n              className=\"hidden\"\r\n            />\r\n\r\n            {/* Show the selected image */}\r\n            {selectedImage && (\r\n              <div className=\"mt-4 flex justify-center items-center gap-10\">\r\n                <img\r\n                  src={selectedImage}\r\n                  alt=\"Uploaded\"\r\n                  className=\"w-60 h-auto border-2 border-gray-300\"\r\n                />\r\n                {loading ? (\r\n                  <p className=\"mt-2 text-white text-lg font-semibold\">Processing image...</p>\r\n                ) : (\r\n                  <p className=\"mt-2 text-white text-lg font-semibold\">Text extracted successfully!</p>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Show extracted text */}\r\n\r\n        </div>\r\n\r\n      </div>\r\n      <div className='flex justify-center'>\r\n        {extractedText && (\r\n          <div className=\"mt-0 mb-10 p-4 w-10/12 bg-white shadow rounded\">\r\n            <h3 className=\"text-lg font-bold\">Extracted Text:</h3>\r\n            <p className=\"text-gray-700 mt-2\">{extractedText}</p>\r\n\r\n            {/* Read Aloud Button in English */}\r\n            <button\r\n              onClick={() => handleReadAloud('en-US')}\r\n              className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 focus:outline-none\"\r\n            >\r\n              Read Aloud (English)\r\n            </button>\r\n\r\n            {/* Read Aloud Button in Hindi */}\r\n            <button\r\n              onClick={() => handleReadAloud('hi-IN')}\r\n              className=\"mt-4 ml-2 px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 focus:outline-none\"\r\n            >\r\n              Read Aloud (Hindi)\r\n            </button>\r\n\r\n            {/* Pause Button */}\r\n            <button\r\n              onClick={handlePause}\r\n              className=\"mt-4 ml-2 px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 focus:outline-none\"\r\n              disabled={!isSpeaking}\r\n            >\r\n              Pause\r\n            </button>\r\n\r\n            {/* Resume Button */}\r\n            <button\r\n              onClick={handleResume}\r\n              className=\"mt-4 ml-2 px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-600 focus:outline-none\"\r\n              disabled={!window.speechSynthesis.paused}\r\n            >\r\n              Resume\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default BotAvatar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}